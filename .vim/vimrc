" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)')) | PlugInstall --sync | source $MYVIMRC | endif

call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'
Plug 'dense-analysis/ale'
Plug 'takac/vim-hardtime'
Plug 'vimwiki/vimwiki'
call plug#end()


" set syntax highlighting if possible
if has("syntax")
  syntax on
endif

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

" mark column #80
highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%80v',100)

" change colorcheme
" colorscheme koehler
set t_Co=256
let g:badwolf_darkgutter = 1
silent! colorscheme badwolf

" mark tabs and spaces
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list

" map ; to :
noremap ; :

" add ruler at the end of line
set ruler

" do not beep on error
set visualbell

" show line numbers relative to current line
set relativenumber

" highlight line with cursor
set cursorline
set showcmd

" check indent config based on filename
filetype indent on
filetype plugin on

" allow autoindent, set tabs to 4 spaces
set autoindent
set shiftwidth=4
set softtabstop=4
set expandtab

" don't break line in the middle of the word
set linebreak

" code folding based on indent,max fold nesting, no folding on file open, and
" use space to fold/unfold
set foldmethod=indent
set foldnestmax=99
set nofoldenable
noremap <space> za

" spellcheck
set spelllang=en,pl
set spellfile=~/.vim/spell/en-pl.utf-8.add
noremap <F5> :setlocal spell!<CR>

" Plugin Lighline config
set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'powerline',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'readonly', 'absolutepath', 'modified' ] ]
      \ },
      \ 'component': {
      \ },
      \ }


"Plugin NERDtree config (autoenable)
"autocmd vimenter * NERDTree
"let g:NERDTreeDirArrowExpandable = ''
"let g:NERDTreeDirArrowCollapsible = ''

" Plugin ALE Linter config
let g:ale_sign_column_always = 1
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

" hardmode config
"let g:hardtime_default_on = 1
"let g:list_of_disabled_keys = ["<UP>","<DOWN>","<LEFT>","<RIGHT>"]

" vimwiki config
let g:vimwiki_list = [{'path': '~/vimwiki/', 'syntax': 'markdown', 'ext': 'md'}]

